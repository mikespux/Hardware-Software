package com.easyweigh.aidlprinter.service.utils;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.AlertDialog;
import android.content.ComponentName;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.ServiceConnection;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.os.Message;
import android.os.RemoteException;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import com.easyweigh.R;

import java.util.Random;

import woyou.aidlservice.jiuiv5.ICallback;
import woyou.aidlservice.jiuiv5.IWoyouService;

public class PrinterTestDemoAct extends Activity implements OnClickListener {
	private static final String TAG = "PrinterTestDemo";
	
	public static final int DO_PRINT = 0x10001;
	private Button b_barcode, b_pic, b_qcode, b_self, b_text, b_table, b_init,b_lines, b_test;
	private Button b_testall,b_baidu,b_query,b_bytes, b_block, b_length;

	
	private  TextView info;
	
	private IWoyouService woyouService;
	private byte[] inputCommand ;
    
	private final int RUNNABLE_LENGHT = 11;
	
	private Random random = new Random();
	
	private ICallback callback = null;
	
	private ServiceConnection connService = new ServiceConnection() {

		@Override
		public void onServiceDisconnected(ComponentName name) {

			woyouService = null;
		}

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			woyouService = IWoyouService.Stub.asInterface(service);
			setButtonEnable(true);
		}
	};

	private final int MSG_TEST = 1;
	private long printCount = 0;
	
	@SuppressLint("HandlerLeak")
	Handler handler=new Handler(){
	    @Override
	    public void handleMessage(Message msg){
	    	if(msg.what == MSG_TEST){
	    		testAll();
	    		long mm = MemInfo.getmem_UNUSED(PrinterTestDemoAct.this);
	    		if( mm < 100){
	    			handler.sendEmptyMessageDelayed(MSG_TEST, 20000);
	    		}else{
	    			handler.sendEmptyMessageDelayed(MSG_TEST, 800);
	    		}
	    		Log.i(TAG,"testAll: " + printCount + " Memory: " + mm);
	    	}
	    }
	};
	
	private void test(){
		ThreadPoolManager.getInstance().executeTask(new Runnable(){

			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					woyouService.printerSelfChecking(null);
					woyouService.printText(" printed: " + printCount + " bills.\n\n\n\n", null);
					printCount++;
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}});
	}
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.layout_printer_test_demo);
		innitView();
	}

	
	private void innitView() {
		
		
		new BitmapUtils(this);
		b_barcode = (Button) findViewById(R.id.b_barcode);
		b_pic = (Button) findViewById(R.id.b_pic);
		b_qcode = (Button) findViewById(R.id.b_qcode);
		b_self = (Button) findViewById(R.id.b_self);
		b_text = (Button) findViewById(R.id.b_text);
		b_table = (Button) findViewById(R.id.b_table);
		b_init = (Button) findViewById(R.id.b_init);
		b_lines = (Button) findViewById(R.id.b_lines);
		b_test = (Button) findViewById(R.id.b_test);
		b_block = (Button) findViewById(R.id.b_block);
		b_length = (Button) findViewById(R.id.b_length);
		//b_koubei = (Button) findViewById(R.id.b_koubei);
		
		findViewById(R.id.b_exit).setOnClickListener(this);
		
		b_barcode.setOnClickListener(this);
		b_pic.setOnClickListener(this);
		b_qcode.setOnClickListener(this);
		b_self.setOnClickListener(this);
		b_text.setOnClickListener(this);
		b_table.setOnClickListener(this);
		b_init.setOnClickListener(this);
		b_lines.setOnClickListener(this);
		b_test.setOnClickListener(this);
		b_block.setOnClickListener(this);
		b_length.setOnClickListener(this);
		
		b_bytes = (Button) findViewById(R.id.b_bytes);
		b_query = (Button) findViewById(R.id.b_query);
		b_baidu = (Button) findViewById(R.id.b_baidu);
		//b_meituan = (Button) findViewById(R.id.b_meituan);
		//b_erlmo = (Button) findViewById(R.id.b_erlmo);
		b_testall = (Button) findViewById(R.id.b_testall);

		
		b_bytes.setOnClickListener(this);
		b_query.setOnClickListener(this);
		b_baidu.setOnClickListener(this);
		b_testall.setOnClickListener(this);
		
		info = (TextView) findViewById(R.id.info);
		
		callback = new ICallback.Stub() {
			
			@Override
			public void onRunResult(final boolean success) throws RemoteException {
			}
			
			@Override
			public void onReturnString(final String value) throws RemoteException {
				Log.i(TAG,"printlength:" + value + "\n");						
			}
			
			@Override
			public void onRaiseException(int code, final String msg) throws RemoteException {
				Log.i(TAG,"onRaiseException: " + msg);
				runOnUiThread(new Runnable(){
					@Override
					public void run() {
						info.append("onRaiseException = " + msg + "\n");
					}});
				
			}
		};		
		
		setButtonEnable(false);
		
		Intent intent=new Intent();
		intent.setPackage("woyou.aidlservice.jiuiv5");
		intent.setAction("woyou.aidlservice.jiuiv5.IWoyouService");
		startService(intent);
		bindService(intent, connService, Context.BIND_AUTO_CREATE);
	}
	
	private void setButtonEnable(boolean flag){
		b_barcode.setEnabled(flag);
		b_pic.setEnabled(flag);
		b_qcode.setEnabled(flag);
		b_self.setEnabled(flag);
		b_text.setEnabled(flag);
		b_table.setEnabled(flag);
		b_init.setEnabled(flag);
		b_lines.setEnabled(flag);
		b_test.setEnabled(flag);

		b_bytes.setEnabled(flag);
		b_query.setEnabled(flag);
		b_baidu.setEnabled(flag);
		b_testall.setEnabled(flag);
		
		b_length.setEnabled(flag);
		
	}
	
	Bitmap mBitmap;
	Bitmap mBitmap1;
		
	@Override
	public void onClick(View v) {				
			switch (v.getId()) {
			case R.id.b_length:
				//Random print black spots
				printRandomDot(500);
				break;			
			case R.id.b_block:
				//print black block
				printBlackBlock(4800);
				break;
			case R.id.b_testall:
				testAll();
				printCount = 1;
				handler.sendEmptyMessage(MSG_TEST);
				break;
		/*	case R.id.b_erlmo:
				//ele.me take away
				printErlmoBill();
				break;
			case R.id.b_koubei:
				//Koubei take away
				printKoubeiBill();
				break;			
			case R.id.b_meituan:
				//Meituan take away
				printMeiTuanBill();
				break;*/
			case R.id.b_baidu:				
				//Baidu take away bill
				printBaiduBill();
				break;
			case R.id.b_query:
				//check the print length since power on
				queryPrintLength();
				break;
			case R.id.b_self:
				//print self-inspection page
				printSelf();
				break;
			case R.id.b_lines:
				// print several blank line
				printLineWrap(3);				
				break;
			case R.id.b_init:
				//initialize the printer
				printerInit();				
				break;
			case R.id.b_text:				
				//print text
				printText();				
				break;
			case R.id.b_table:
				//print table
				printTable();
				break;
			case R.id.b_pic:
				//print image
				printBitmap();
				break;
			case R.id.b_barcode:
				//print bar code
				printBarcode();				
				break;
			case R.id.b_qcode:
				//print qr-code
				printQCode();								
				break;
			case R.id.b_test:
				//Comprehensive print test
				fullTest();
				break;
			case R.id.b_exit:
				try{
					unbindService(connService);					
					handler.removeMessages(MSG_TEST);
				}catch(Exception e){}
				finally{
					this.finish();
				}
				break;
			case R.id.b_bytes:	
				//Manual input text and print it
					inputBytes();
				break;
			default:
				break;
			}
	}
	
	public void testAll(){
		switch(random.nextInt(RUNNABLE_LENGHT)){
		case 0:
			printText();
			break;
		case 1:
			printBarcode();
			break;
		case 3:
			printQCode();
			break;
		case 4:
			printBitmap();
			break;
		case 5:
			printTable();
			break;
		case 6:
			printBaiduBill();
			break;
		case 7:
			printKoubeiBill();
			break;
		case 8:
			printMeiTuanBill();
			break;
		case 9:
			printErlmoBill();
			break;
		case 10:
			printSelf();
			break;
		default:
			break;
		}
		printCount++;
	}
	
	//Random print black spots
	public void printRandomDot(final int lines){
		ThreadPoolManager.getInstance().executeTask(new Runnable(){

			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					//woyouService.getPrintedLength(callback);
					byte[] data = null;
					for(int i=0; i<lines; i++){
						data = setCusorPosition(random.nextInt(384));
						woyouService.sendRAWData(data, callback);
					}
				} catch (RemoteException e) {
					e.printStackTrace();
				}
			}});	
	}
	
	//print black block
	public void printBlackBlock(int height){
		final byte[] bytes = BytesUtil.initBlackBlock(height,384);
		printData(bytes);
	}
	
	//ele.me take away bill
	public void printErlmoBill(){
		printData(getErlmoData());
	}
	
	//Koubei take away bill
	public void printKoubeiBill(){
		printData(getKoubeiData());
	}
	
	//Meituan take away bill
	public void printMeiTuanBill(){
		printData(getMeituanBill());
	}
	
	//Baidu take away bill
	public void printBaiduBill(){
		printData(getBaiduTestBytes());
	}
	
	//print character 
	public void printData(final byte[] bill){
		ThreadPoolManager.getInstance().executeTask(new Runnable(){
			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					woyouService.sendRAWData(bill, callback);
					woyouService.lineWrap(3, callback);
				} catch (RemoteException e) {
					e.printStackTrace();
				}
			}});		
	}
	
	//Query print length since reboot
	public void queryPrintLength(){
		ThreadPoolManager.getInstance().executeTask(new Runnable(){

			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					woyouService.getPrintedLength(callback);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}});		
	}
	
	//print self-inspection page
	public void printSelf(){
		ThreadPoolManager.getInstance().executeTask(new Runnable(){

			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					woyouService.setAlignment(1, callback);
					woyouService.printerSelfChecking(callback);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}});				
	}
	
	//print several blank line
	public void printLineWrap(final int n){
		ThreadPoolManager.getInstance().executeTask(new Runnable(){

			@Override
			public void run() {
				try {
					woyouService.lineWrap(n, callback);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}});		
	}
	
	//initialize  the printer
	public void printerInit(){
		info.setText("");
		ThreadPoolManager.getInstance().executeTask(new Runnable(){

			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					woyouService.printerInit(callback);							
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}});		
	}
	
	//print word
	public void printText(){
		ThreadPoolManager.getInstance().executeTask(new Runnable(){

			@Override
			public void run() {
				if( mBitmap == null ){
					mBitmap = BitmapFactory.decodeResource(getResources(), R.raw.test);
				}
				try {
					woyouService.printText("There were  ",callback);
					woyouService.printTextWithFont("28", "", 36, callback);
					woyouService.printText("in front of you\n",callback);
					for(int i=24; i<=48; i+=6){
						woyouService.printTextWithFont("Sunmi", "", i, callback);
					}
					for(int i=48; i>=12; i-=2){
						woyouService.printTextWithFont("Sunmi", "", i, callback);
					}
					woyouService.lineWrap(1, callback);							
					woyouService.printTextWithFont("ABCDEFGHIJKLMNOPQRSTUVWXYZ01234\n","",30, callback);							
					woyouService.printTextWithFont("abcdefghijklmnopqrstuvwxyz56789\n","",30, callback);
					woyouService.printText("ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\n", callback);
					woyouService.printText("abcdefghijklmnopqrstuvwxyz0123456789\n",callback);
					
					woyouService.lineWrap(2, callback);
					woyouService.setAlignment(1, callback);
					woyouService.printBitmap(mBitmap, callback);
					woyouService.setFontSize(24, callback);
					woyouService.printTextWithFont("Welcome start printer test\n", "", 35, callback);
					woyouService.setAlignment(0, callback);
					woyouService.printTextWithFont("*****************************\n", "", 24, callback);
					woyouService.printTextWithFont("this is a normal line\n", "", 24, callback);
					woyouService.printTextWithFont("this line's font size is 30\n", "", 30, callback);
					woyouService.printTextWithFont("this line's font size is 36\n", "", 36, callback);
					woyouService.printTextWithFont("this line's font size is 42\n", "", 42, callback);
					//woyouService.printTextWithFont("*****************************\n", "", 24, callback);
					woyouService.sendRAWData(BytesUtil.initLine2(384), callback);
					woyouService.setAlignment(1, callback);
					woyouService.printBarCode("2015112910", 8, 100, 2, 2, callback);
					woyouService.printTextWithFont("\n\n", "", 24, callback);
					woyouService.setAlignment(1, callback);
					woyouService.printTextWithFont("***Completed***\n", "", 35, callback);
					for(int i=0; i<12; i++){
						woyouService.sendRAWData(BytesUtil.initLine1(384,i), callback);
					}
					String[] s = woyouService.getServiceVersion().split("\\.");
					int ver = 10000 * Integer.parseInt(s[0]) 
							+ 100 * Integer.parseInt(s[1])  
							+ Integer.parseInt(s[2]) ;
					
					//printOriginalText方法是1.7.6版本新加的，用于字符原宽度输出，即不作等宽处理
					//printOriginalText was added after 1.7.6
					if(ver >= 10706){
						woyouService.setFontSize(36, callback);
						woyouService.printOriginalText("κρχκμνκλρκνκνμρτυφ\n", callback);
						woyouService.printOriginalText("http://www.sunmi.com\n", callback);
						woyouService.printOriginalText("this line's font size is 36\n這是一行36號字體\n", callback);
						woyouService.setFontSize(24, callback);
						woyouService.printOriginalText("κρχκμνκλρκνκνμρτυφ\n", callback);
						woyouService.printOriginalText("http://www.sunmi.com\n", callback);
						woyouService.printOriginalText("this is a normal line\n這是一行正常字體\n", callback);
					}
					
					Log.i("PrinterTestDemo","version = " + woyouService.getServiceVersion()+ "\nlength="+s.length);
						
					woyouService.lineWrap(4, callback);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}});		
	}
	
	//print table
	public void printTable(){
		ThreadPoolManager.getInstance().executeTask(new Runnable(){

			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					woyouService.setAlignment(0, callback);
					woyouService.sendRAWData(new byte[]{0x1B, 0x21, 0x08}, callback);
					
					woyouService.setFontSize(24, callback);						
					String[] text = new String[4];
					int[] width = new int[] { 10, 6, 6, 8 };
					int[] align = new int[] { 0, 2, 2, 2 }; 
					text[0] = "Name";
					text[1] = "Quantity";
					text[2] = "Price";
					text[3] = "Total price";
					woyouService.printColumnsText(text, width, new int[] { 1, 2, 2, 2 }, callback);
					
					text[0] = "Strawberry yoghourt";
					text[1] = "4";
					text[2] = "12.00";
					text[3] = "48.00";
					woyouService.printColumnsText(text, width, align, callback);
					
					text[0] = "Yoghourt B";
					text[1] = "10";
					text[2] = "4.00";
					text[3] = "40.00";
					woyouService.printColumnsText(text, width, align, callback);
					
					text[0] = "Yogurt orange fruit cake"; // Text long, wrap
					text[1] = "100";
					text[2] = "16.00";
					text[3] = "1600.00";
					woyouService.printColumnsText(text, width, align, callback);
	
					text[0] = "Yogurt fruit sandwich";
					text[1] = "10";
					text[2] = "4.00";
					text[3] = "40.00";
					woyouService.printColumnsText(text, width, align, callback);
					
					woyouService.setFontSize(30, callback);	
					woyouService.setAlignment(0, callback);
					
					text = new String[3];
					width = new int[] { 10, 6, 8 };
					align = new int[] { 0, 2, 2 }; //
					
					text[0] = "Dish name";
					text[1] = "quantity";
					text[2] = "Total price";
					woyouService.printColumnsText(text, width, new int[] {1,2,2}, callback);
					
					text[0] = "Strawberry yoghurt pudding";
					text[1] = "4";
					text[2] = "48.00";
					woyouService.printColumnsText(text, width, align, callback);
					
					text[0] = "Yogurt fruit sandwich";
					text[1] = "10";
					text[2] = "40.00";
					woyouService.printColumnsText(text, width, align, callback);
					
					text[0] = "Yogurt orange fruit cake"; // 文字超长,换行
					text[1] = "100";
					text[2] = "1600.00";
					woyouService.printColumnsText(text, width, align, callback);
	
					text[0] = "Milk";
					text[1] = "10";
					text[2] = "40.00";
					woyouService.printColumnsText(text, width, align, callback);							
					woyouService.lineWrap(3, null);
					
					woyouService.sendRAWData(new byte[]{0x1B, 0x21, 0x00}, callback);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}						
			}});
	}
	
	//print picture
	public void printBitmap(){
		ThreadPoolManager.getInstance().executeTask(new Runnable(){

			@Override
			public void run() {
				if( mBitmap == null ){
					mBitmap = BitmapFactory.decodeResource(getResources(), R.raw.test);
				}
				if( mBitmap1 == null ){
					mBitmap1 = BitmapUtils.zoomBitmap(mBitmap, 300, 300);
				}
				
				try {
					woyouService.setAlignment(1, callback);
					woyouService.printBitmap(mBitmap, callback);
					woyouService.printBitmap(mBitmap1, callback);
					woyouService.lineWrap(3, null);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}				
			}});		
	}
	
	//print barcode
	public void printBarcode(){
		ThreadPoolManager.getInstance().executeTask(new Runnable(){

			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					woyouService.setAlignment(1, callback);
					woyouService.printBarCode("2015112910", 8, 120, 2, 2, callback);
					woyouService.lineWrap(3, callback);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}});		
	}
	
	//print qr-code
	public void printQCode(){
		ThreadPoolManager.getInstance().executeTask(new Runnable(){
			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					woyouService.setAlignment(1, callback);
					//woyouService.printQRCode("http://www.woyouwaimai.com", 10, 2, callback);
					byte[] bytes = BytesUtil.getZXingQRCode("http://www.woyouwaimai.com", 240);
					System.out.println(BytesUtil.getHexStringFromBytes(bytes));
					woyouService.sendRAWData(bytes, callback);
					woyouService.lineWrap(3, callback);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}});		
	}
	
	//Comprehensive print test
	public void fullTest(){
		ThreadPoolManager.getInstance().executeTask(new Runnable(){

			@Override
			public void run() {
				try {			
					Bitmap bmp;
					//print ladder black block
					woyouService.sendRAWData(BytesUtil.initBlackBlock(384), callback);
					//woyouService.lineWrap(1, null);
					
					//print black block
					//woyouService.sendRAWData(BytesUtil.initBlackBlock(48, 384), callback);
					//woyouService.lineWrap(1, callback);
					
					//print gray block 
					woyouService.sendRAWData(BytesUtil.initGrayBlock(48, 384), callback);
					//woyouService.lineWrap(1, null);
					
					//print table
					woyouService.sendRAWData(BytesUtil.initTable(3, 12), callback);
					//woyouService.lineWrap(1, null);
					
					bmp = BytesUtil.getTableBitmapFromData(24, 48, 8);
					woyouService.printBitmap(bmp, callback);
					
					woyouService.setAlignment(0, callback);
					String s = "商";
					for(int i=0; i<16; i++){
						woyouService.printText(s + "\n", callback);
						s += "商";
					}
					woyouService.sendRAWData(new byte[]{0x1B,0x21,0x10}, callback);
					s = "测";
					for(int i=0; i<16; i++){
						woyouService.printText(s + "\n", callback);
						s += "测";
					}
					woyouService.sendRAWData(new byte[]{0x1B,0x21,0x00}, callback);
					int k = 6;
					for(int i=0; i<64; i++){
						bmp = BytesUtil.getLineBitmapFromData(12,k);
						k += 6;
						woyouService.printBitmap(bmp, callback);						
					}

					woyouService.lineWrap(3, callback);

					
				} catch (RemoteException e) {
					e.printStackTrace();
				}
			}});				
	}
	
	//manual input print
	public void inputBytes(){
	      final EditText inputServer = new EditText(this);
	        AlertDialog.Builder builder = new AlertDialog.Builder(this);
	        builder.setTitle("Server").setIcon(android.R.drawable.ic_dialog_info).setView(inputServer)
	                .setNegativeButton("Cancel", null);
	        builder.setPositiveButton("Ok", new DialogInterface.OnClickListener() {

	            public void onClick(DialogInterface dialog, int which) {
	            	inputCommand = BytesUtil.getBytesFromHexString(inputServer.getText().toString());
	            	try{
	            		System.out.println(BytesUtil.getHexStringFromBytes(inputCommand));
	            		woyouService.sendRAWData(inputCommand, callback);
	            	} catch (RemoteException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
	            }
	        });
	        builder.show();						
	}
	
	
	//ele.me take away bill
	public byte[] getErlmoData(){
		byte[] rv = new byte[]{
				0x1b,0x40,0x1b,0x61,0x00,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x20,0x1d,0x21,0x11,0x23,0x31,0x1d,0x21,0x00,0x00,(byte)0xb6,(byte)0xf6
				,(byte)0xc1,(byte)0xcb,(byte)0xc3,(byte)0xb4,(byte)0xcd,(byte)(byte)0xe2,(byte)0xc2,(byte)0xf4,(byte)0xb5,(byte)0xa5,0x20,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x0a,0x0a,0x1b,0x61
				,0x01,(byte)0xbf,(byte)0xa8,(byte)0xc8,(byte)0xf8,(byte)0xc5,(byte)0xfb,(byte)0xc8,(byte)0xf8,0x0a,0x0a,0x1b,0x61,0x00,0x1b,0x61,0x01,0x1d,0x21,0x11,0x2d,0x2d
				,(byte)0xd2,(byte)0xd1,(byte)0xd6,(byte)0xa7,(byte)0xb8,(byte)0xb6,0x2d,0x2d,0x1d,0x21,0x00,0x00,0x0a,0x0a,0x1b,0x61,0x00,0x1b,0x61,0x01,0x1d,0x21
				,0x11,(byte)0xd4,(byte)0xa4,(byte)0xbc,(byte)0xc6,0x31,0x39,0x3a,0x30,0x30,(byte)0xcb,(byte)0xcd,(byte)0xb4,(byte)(byte)0xef,0x1d,0x21,0x00,0x00,0x0a,0x0a,0x1b,0x61
				,0x00,0x5b,(byte)0xcf,(byte)0xc2,(byte)0xb5,(byte)0xa5,(byte)0xca,(byte)0xb1,(byte)0xbc,(byte)(byte)0xe4,0x5d,0x32,0x30,0x31,0x34,0x2d,0x31,0x32,0x2d,0x30,0x33,0x20
				,0x31,0x36,0x3a,0x32,0x31,0x0a,0x5b,(byte)0xb1,(byte)0xb8,(byte)0xd7,(byte)0xa2,0x5d,0x1d,0x21,0x01,(byte)0xb2,(byte)0xbb,(byte)0xb3,(byte)0xd4,(byte)0xc0,(byte)0xb1,0x20
				,(byte)0xc0,(byte)0xb1,(byte)0xd2,(byte)0xbb,(byte)0xb5,(byte)(byte)0xe3,0x20,(byte)0xb6,(byte)(byte)0xe0,(byte)0xbc,(byte)0xd3,(byte)0xc3,(byte)0xd7,0x20,(byte)0xc3,(byte)0xbb,(byte)0xc1,(byte)(byte)0xe3,(byte)0xc7,(byte)0xae,0x1d,0x21
				,0x00,0x0a,0x5b,(byte)0xb7,(byte)0xa2,(byte)0xc6,(byte)0xb1,0x5d,(byte)0xd5,(byte)(byte)0xe2,(byte)0xca,(byte)0xc7,(byte)0xd2,(byte)0xbb,(byte)0xb8,(byte)0xf6,(byte)0xb7,(byte)0xa2,(byte)0xc6,(byte)0xb1,(byte)0xcc,(byte)0xa7
				,(byte)0xcd,(byte)0xb7,0x0a,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,(byte)0xb2,(byte)0xcb,(byte)0xc3,(byte)0xfb,0x20,0x20,0x20,0x20
				,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,(byte)0xca,(byte)0xfd,(byte)0xc1,(byte)0xbf,0x20,0x20,(byte)0xd0,(byte)0xa1
				,(byte)0xbc,(byte)0xc6,0x0a,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x20,0x31,(byte)0xba,(byte)0xc5,(byte)0xc0,(byte)0xba,(byte)0xd7,(byte)0xd3
				,0x20,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,0x1d,0x21,0x01,(byte)0xb2,(byte)(byte)0xe2,(byte)0xca,(byte)0xd4,(byte)0xc3,(byte)0xc0
				,(byte)0xca,(byte)0xb3,(byte)0xd2,(byte)0xbb,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1d,0x21
				,0x01,0x20,0x78,0x34,0x1d,0x21,0x00,0x1d,0x21,0x01,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x34
				,0x1d,0x21,0x00,0x0a,0x1d,0x21,0x01,(byte)0xb2,(byte)(byte)0xe2,(byte)0xca,(byte)0xd4,(byte)0xc3,(byte)0xc0,(byte)0xca,(byte)0xb3,(byte)0xb6,(byte)0xfe,0x1d,0x21,0x00,0x20,0x20
				,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x20,0x78,0x36,0x1d,0x21,0x00,0x1d,0x21
				,0x01,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x36,0x1d,0x21,0x00,0x0a,0x1d,0x21,0x01,(byte)0xb2,(byte)(byte)0xe2
				,(byte)0xca,(byte)0xd4,(byte)0xc3,(byte)0xc0,(byte)0xca,(byte)0xb3,(byte)0xc8,(byte)0xfd,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
				,0x20,0x20,0x1d,0x21,0x01,0x20,0x78,0x32,0x1d,0x21,0x00,0x1d,0x21,0x01,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20
				,0x1d,0x21,0x01,0x32,0x1d,0x21,0x00,0x0a,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x20,0x32,(byte)0xba
				,(byte)0xc5,(byte)0xc0,(byte)0xba,(byte)0xd7,(byte)0xd3,0x20,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,0x1d,0x21,0x01,(byte)0xb2
				,(byte)(byte)0xe2,(byte)0xca,(byte)0xd4,0x31,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
				,0x20,0x20,0x20,0x1d,0x21,0x01,0x20,0x78,0x31,0x1d,0x21,0x00,0x1d,0x21,0x01,0x1d,0x21,0x00,0x20,0x20,0x20,0x20
				,0x20,0x1d,0x21,0x01,0x31,0x1d,0x21,0x00,0x0a,0x1d,0x21,0x01,(byte)0xb2,(byte)(byte)0xe2,(byte)0xca,(byte)0xd4,0x32,0x1d,0x21,0x00,0x20,0x20
				,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x20,0x78,0x31
				,0x1d,0x21,0x00,0x1d,0x21,0x01,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x31,0x1d,0x21,0x00,0x0a
				,0x1d,0x21,0x01,(byte)0xb2,(byte)(byte)0xe2,(byte)0xca,(byte)0xd4,0x33,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
				,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x20,0x78,0x31,0x1d,0x21,0x00,0x1d,0x21,0x01,0x1d,0x21,0x00
				,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x32,0x33,0x1d,0x21,0x00,0x0a,0x1d,0x21,0x01,0x28,0x2b,0x29,(byte)0xb2,(byte)(byte)0xe2,(byte)0xca
				,(byte)0xd4,(byte)0xd1,(byte)0xf3,(byte)0xc6,(byte)0xf8,(byte)0xa4,(byte)0xce,(byte)0xce,(byte)0xf7,(byte)0xca,(byte)0xbd,(byte)0xcc,(byte)0xf0,(byte)0xb5,(byte)(byte)0xe3,0x1d,0x21,0x00,0x20,0x20,0x1d,0x21
				,0x01,0x20,0x78,0x31,0x1d,0x21,0x00,0x1d,0x21,0x01,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x31
				,0x1d,0x21,0x00,0x0a,0x1d,0x21,0x01,0x28,0x2b,0x29,(byte)0xb2,(byte)(byte)0xe2,(byte)0xca,(byte)0xd4,(byte)0xcb,(byte)(byte)0xe1,(byte)0xc0,(byte)0xb1,(byte)0xc4,(byte)0xbe,(byte)0xb6,(byte)0xfa
				,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x20,0x78,0x31,0x1d,0x21,0x00,0x1d,0x21
				,0x01,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x38,0x1d,0x21,0x00,0x0a,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x20,0x33,(byte)0xba,(byte)0xc5,(byte)0xc0,(byte)0xba,(byte)0xd7,(byte)0xd3,0x20,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x0a,0x1d,0x21,0x01,(byte)0xb2,(byte)(byte)0xe2,(byte)0xca,(byte)0xd4,(byte)0xb2,(byte)0xcb,(byte)0xc6,(byte)0xb7,(byte)0xc3,(byte)0xfb,(byte)0xd7,(byte)0xd6,(byte)0xba,(byte)0xdc
				,(byte)0xb3,(byte)0xa4,(byte)0xba,(byte)0xdc,(byte)0xb3,(byte)0xa4,(byte)0xba,(byte)0xdc,(byte)0xb3,(byte)0xa4,(byte)0xba,(byte)0xdc,(byte)0xb3,(byte)0xa4,(byte)0xba,(byte)0xdc,(byte)0xb3,(byte)0xa4,0x1d,0x21,0x00,0x0a
				,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
				,0x20,0x1d,0x21,0x01,0x20,0x78,0x31,0x1d,0x21,0x00,0x1d,0x21,0x01,0x1d,0x21,0x00,0x20,0x20,0x20,0x1d,0x21,0x01
				,0x33,0x30,0x30,0x1d,0x21,0x00,0x0a,0x1d,0x21,0x01,(byte)0xb2,(byte)(byte)0xe2,(byte)0xca,(byte)0xd4,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20
				,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x20,0x78,0x31,0x1d,0x21
				,0x00,0x1d,0x21,0x01,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x31,0x1d,0x21,0x00,0x0a,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x20,(byte)0xc6,(byte)(byte)0xe4,(byte)0xcb,(byte)0xfb,(byte)0xb7,(byte)0xd1,(byte)0xd3,(byte)0xc3,0x20,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,0x1d,0x21,0x01,(byte)0xc5,(byte)(byte)0xe4,(byte)0xcb,(byte)0xcd,(byte)0xb7,(byte)0xd1,0x1d,0x21,0x00,0x20
				,0x20,0x20,0x20,0x20
		};
		return rv;
	}	
	
	//Baidu take away bill
	public byte[] getBaiduTestBytes(){
		byte[] rv = new byte[]{
				0x1b,0x40,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x11,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x1b,0x45,0x01,0x1b,0x47,0x01,(byte)0xb1,(byte)0xbe
				,(byte)0xb5,(byte)0xea,(byte)0xc1,(byte)0xf4,(byte)0xb4,(byte)0xe6,0x0a,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x2a,0x2a,0x2a
				,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a
				,0x2a,0x0a
				,0x1b,0x40,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x11,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x1b,0x45,0x01,0x1b,0x47,0x01,0x1b,0x61
				,0x01,0x23,0x31,0x35,0x20,(byte)0xb0,(byte)0xd9,(byte)0xb6,(byte)0xc8,(byte)0xcd,(byte)0xe2,(byte)0xc2,(byte)0xf4,0x0a,0x5b,(byte)0xbb,(byte)0xf5,(byte)0xb5,(byte)0xbd,(byte)0xb8,(byte)0xb6,(byte)0xbf,(byte)0xee,0x5d,0x0a,0x1b,0x4d,0x00
				,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a
				,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x0a
				,0x1b,0x40,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x01,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,(byte)0xc6,(byte)0xda,(byte)0xcd,(byte)0xfb,(byte)0xcb,(byte)0xcd,(byte)0xb4,(byte)0xef
				,(byte)0xca,(byte)0xb1,(byte)0xbc,(byte)0xe4,(byte)0xa3,(byte)0xba,(byte)0xc1,(byte)0xa2,(byte)0xbc,(byte)0xb4,(byte)0xc5,(byte)0xe4,(byte)0xcb,(byte)0xcd,0x0a,(byte)0xb6,(byte)0xa9,(byte)0xb5,(byte)0xa5,(byte)0xb1,(byte)0xb8,(byte)0xd7,(byte)0xa2,(byte)0xa3,(byte)0xba,(byte)0xc7,(byte)0xeb,(byte)0xcb
				,(byte)0xcd,(byte)0xb5,(byte)0xbd,(byte)0xbf,(byte)0xfc,(byte)0xbf,(byte)0xc6,(byte)0xce,(byte)0xf7,(byte)0xc3,(byte)0xc5,0x2c,(byte)0xb2,(byte)0xbb,(byte)0xd2,(byte)0xaa,(byte)0xc0,(byte)0xb1,0x0a,(byte)0xb7,(byte)0xa2,(byte)0xc6,(byte)0xb1,(byte)0xd0,(byte)0xc5,(byte)0xcf,(byte)0xa2,(byte)0xa3
				,(byte)0xba,(byte)0xb0,(byte)0xd9,(byte)0xb6,(byte)0xc8,(byte)0xcd,(byte)0xe2,(byte)0xc2,(byte)0xf4,(byte)0xb7,(byte)0xa2,(byte)0xc6,(byte)0xb1,0x0a,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47
				,0x00,0x1b,0x61,0x00,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a
				,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x0a
				,0x1b,0x40,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,(byte)0xb6,(byte)0xa9,(byte)0xb5,(byte)0xa5,(byte)0xb1,(byte)0xe0,(byte)0xba,(byte)0xc5
				,(byte)0xa3,(byte)0xba,0x31,0x34,0x31,0x38,0x37,0x31,0x38,0x36,0x39,0x31,0x31,0x36,0x38,0x39,0x0a,(byte)0xcf,(byte)0xc2,(byte)0xb5,(byte)0xa5,(byte)0xca,(byte)0xb1,(byte)0xbc,(byte)0xe4,(byte)0xa3,(byte)0xba,0x32
				,0x30,0x31,0x34,0x2d,0x31,0x32,0x2d,0x31,0x36,0x20,0x31,0x36,0x3a,0x33,0x31,0x0a,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00
				,0x1b,0x47,0x00,0x1b,0x61,0x00,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a
				,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x0a
				,0x1b,0x40,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x01,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,(byte)0xb2,(byte)0xcb,(byte)0xc6,(byte)0xb7,(byte)0xc3,(byte)0xfb,(byte)0xb3,(byte)0xc6
				,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,(byte)0xca,(byte)0xfd,(byte)0xc1,(byte)0xbf,0x20,0x20,0x20,0x20,0x20,(byte)0xbd,(byte)0xf0,(byte)0xb6,(byte)0xee,0x0a,0x1b,0x4d,0x00,0x1b,0x61
				,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x01,0x1b
				,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,(byte)0xcf,(byte)0xe3,(byte)0xc0,(byte)0xb1,(byte)0xc3,(byte)0xe6,(byte)0xcc,(byte)0xd7,(byte)0xb2,(byte)0xcd,0x1b,0x24,(byte)0xf2,0x00,0x31,0x1b,0x24,0x25,0x01,(byte)0xa3
				,(byte)0xa4,0x34,0x30,0x2e,0x30,0x30,0x0a,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x1b,0x4d,0x00
				,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x01,0x1b,0x45,0x00,0x1b
				,0x47,0x00,0x1b,0x61,0x00,(byte)0xcb,(byte)0xd8,(byte)0xca,(byte)0xb3,(byte)0xcc,(byte)0xec,(byte)0xcf,(byte)0xc2,(byte)0xba,(byte)0xba,(byte)0xb1,(byte)0xa4,0x1b,0x24,(byte)0xf2,0x00,0x31,0x1b,0x24,0x25,0x01,(byte)0xa3,(byte)0xa4
				,0x33,0x38,0x2e,0x30,0x30,0x0a,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x1b,0x4d,0x00,0x1b
				,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00
				,0x1b,0x40,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a
				,0x1b,0x40,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a
				,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x0a,0x1b,0x4d,0x00
				,0x1b,0x61,0x00,0x1d,0x21,0x01,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,(byte)0xd0,(byte)0xd5,(byte)0xc3,(byte)0xfb,(byte)0xa3,(byte)0xba,(byte)0xb0,(byte)0xd9,(byte)0xb6,(byte)0xc8,(byte)0xb2,(byte)0xe2,(byte)0xca
				,(byte)0xd4,0x0a,(byte)0xb5,(byte)0xd8,(byte)0xd6,(byte)0xb7,(byte)0xa3,(byte)0xba,(byte)0xbf,(byte)0xfc,(byte)0xbf,(byte)0xc6,(byte)0xbf,(byte)0xc6,(byte)0xbc,(byte)0xbc,(byte)0xb4,(byte)0xf3,(byte)0xcf,(byte)0xc3,0x0a,(byte)0xb5,(byte)0xe7,(byte)0xbb,(byte)0xb0,(byte)0xa3,(byte)0xba,0x31
				,0x38,0x37,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x0a
				,0x1b,0x40,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a
				,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x0a,(byte)0xb0,(byte)0xd9,(byte)0xb6
				,(byte)0xc8,(byte)0xb2,(byte)0xe2,(byte)0xca,(byte)0xd4,(byte)0xc9,(byte)0xcc,(byte)0xbb,(byte)0xa7,0x0a,0x31,0x38,0x37,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x0a,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d
				,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a
				,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x0a,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00
				,0x1b,0x47,0x00,0x1b,0x61,0x00,0x1b,0x61,0x01,0x23,0x31,0x35,0x20,(byte)0xb0,(byte)0xd9,(byte)0xb6,(byte)0xc8,(byte)0xcd,(byte)0xe2,(byte)0xc2,(byte)0xf4,0x20,0x20,0x31,0x31,(byte)0xd4,(byte)0xc2,0x30
				,0x39,(byte)0xc8,(byte)0xd5,0x20,0x31,0x37,0x3a,0x35,0x30,0x3a,0x33,0x30,0x0a,0x0a,0x0a,0x0a,0x0a
		};
		return rv;
	}
	
	public byte[] getMeituanBill(){
		byte[] rv = new byte[]{
				0x1b,0x40,0x1b,0x61,0x01,0x1d,0x21,0x11,(byte)0xa3,(byte)0xa3,0x31,0x20,0x20,(byte)0xc3,(byte)0xc0,(byte)0xcd,(byte)0xc5,(byte)0xb2,(byte)0xe2,(byte)0xca,(byte)0xd4,0x0a
				,0x0a,0x1d,0x21,0x00,(byte)0xd4,(byte)0xc1,(byte)0xcf,(byte)0xe3,(byte)0xb8,(byte)0xdb,(byte)0xca,(byte)0xbd,(byte)0xc9,(byte)0xd5,(byte)0xc0,(byte)0xb0,0x28,(byte)0xb5,(byte)0xda,0x31,(byte)0xc1,(byte)0xaa
				,0x29,0x0a,0x1b,0x21,0x10,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,0x2a,0x20,0x2a,0x20,0x2a,0x20
				,0x2a,0x20,0x2a,0x20,0x2a,0x20,0x20,(byte)0xd4,(byte)0xa4,(byte)0xb6,(byte)0xa9,(byte)0xb5,(byte)0xa5,0x20,0x20,0x2a,0x20,0x2a,0x20,0x2a,0x20,0x2a
				,0x20,0x2a,0x20,0x2a,0x0a,(byte)0xc6,(byte)0xda,(byte)0xcd,(byte)0xfb,(byte)0xcb,(byte)0xcd,(byte)0xb4,(byte)0xef,(byte)0xca,(byte)0xb1,(byte)0xbc,(byte)0xe4,0x3a,0x20,0x5b,0x31,0x38
				,0x3a,0x30,0x30,0x5d,0x0a,0x1d,0x21,0x00,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,0x1b,0x61,0x00
				,(byte)0xcf,(byte)0xc2,(byte)0xb5,(byte)0xa5,(byte)0xca,(byte)0xb1,(byte)0xbc,(byte)0xe4,0x3a,0x30,0x31,0x2d,0x30,0x31,0x20,0x31,0x32,0x3a,0x30,0x30,0x0a,0x1b
				,0x21,0x10,(byte)0xb1,(byte)0xb8,(byte)0xd7,(byte)0xa2,0x3a,(byte)0xb1,(byte)0xf0,(byte)0xcc,(byte)0xab,(byte)0xc0,(byte)0xb1,0x0a,0x1d,0x21,0x00,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,(byte)0xb2,(byte)0xcb,(byte)0xc3,(byte)0xfb,0x09,0x09,0x20,0x20,0x20,(byte)0xca,(byte)0xfd,(byte)0xc1,(byte)0xbf,0x09,0x20,0x20
				,0x20,0x20,(byte)0xd0,(byte)0xa1,(byte)0xbc,(byte)0xc6,0x09,0x0a,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,0x1b,0x21,0x10
				,(byte)0xba,(byte)0xec,(byte)0xc9,(byte)0xd5,(byte)0xc8,(byte)0xe2,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x78
				,0x31,0x09,0x20,0x20,0x20,0x20,0x20,0x20,0x31,0x32,0x0a,0x1d,0x21,0x00,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x0a,(byte)0xc5,(byte)0xe4,(byte)0xcb,(byte)0xcd,(byte)0xb7,(byte)0xd1,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
				,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x35,0x0a,(byte)0xb2,(byte)0xcd,(byte)0xba,(byte)0xd0,(byte)0xb7,(byte)0xd1,0x20,0x20
				,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
				,0x20,0x31,0x0a,0x5b,(byte)0xb3,(byte)0xac,(byte)0xca,(byte)0xb1,(byte)0xc5,(byte)0xe2,(byte)0xb8,(byte)0xb6,0x5d,0x20,0x2d,(byte)0xcf,(byte)0xea,(byte)0xbc,(byte)0xfb,(byte)0xb6,(byte)0xa9,(byte)0xb5
				,(byte)0xa5,0x0a,(byte)0xbf,(byte)0xc9,(byte)0xbf,(byte)0xda,(byte)0xbf,(byte)0xc9,(byte)0xc0,(byte)0xd6,0x3a,0x78,0x31,0x0a,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x0a,0x1b,0x21,0x10,(byte)0xba,(byte)0xcf,(byte)0xbc,(byte)0xc6,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
				,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x31,0x38,(byte)0xd4,(byte)0xaa,0x0a,0x1b,0x40,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,0x1d,0x21,0x11,(byte)0xd5,(byte)0xc5,0x2a,0x20,0x31,0x38,0x33,0x31,0x32,0x33,0x34
				,0x35,0x36,0x37,0x38,0x0a,(byte)0xb5,(byte)0xd8,(byte)0xd6,(byte)0xb7,(byte)0xd0,(byte)0xc5,(byte)0xcf,(byte)0xa2,0x0a,0x1d,0x21,0x00,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,0x0a,0x1b,0x40,0x1b,0x61,0x01,0x1d,0x21,0x11,(byte)0xa3,(byte)0xa3,0x31,0x20,0x20,(byte)0xc3,(byte)0xc0
				,(byte)0xcd,(byte)0xc5,(byte)0xb2,(byte)0xe2,(byte)0xca,(byte)0xd4,0x0a,0x1d,0x21,0x00,0x1b,0x40,0x0a,0x0a,0x0a,0x1d,0x56,0x00				
		};
		return rv;
	}
	
	public byte[] getKoubeiData(){
		byte[] rv = new byte[]{
				0x1b,0x40,0x1b,0x61,0x01,0x1d,0x21,0x11,0x23,0x34,(byte)0xbf,(byte)0xda,(byte)0xb1,(byte)0xae,(byte)0xcd,(byte)0xe2,
				(byte)0xc2,(byte)0xf4,0x0a,0x1b,0x40,0x1b,0x61,0x01,0x1d,0x21,0x11,0x0a,0x1b,0x40,0x1b,0x61,
				0x01,(byte)0xb7,(byte)0xeb,(byte)0xbc,(byte)0xc7,(byte)0xbb,(byte)0xc6,(byte)0xec,(byte)0xcb,(byte)0xbc,(byte)0xa6,(byte)0xc3,(byte)0xd7,(byte)0xb7,(byte)0xb9,0x0a,
				0x1b,0x40,0x1b,0x61,0x00,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,
				0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,
				0x2a,0x2a,0x2a,0x2a,0x2a,0x0a,0x1b,0x40,0x1b,0x61,0x00,0x1d,0x21,0x11,0x31,0x37,
				0x3a,0x32,0x30,0x20,(byte)0xbe,(byte)0xa1,(byte)0xbf,(byte)0xec,(byte)0xcb,(byte)0xcd,(byte)0xb4,(byte)0xef,0x0a,0x1b,0x40,0x1b,
				0x61,0x00,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,
				0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,
				0x2d,0x0a,0x1b,0x40,0x1b,0x61,0x00,0x1d,0x21,0x11,0x31,0x38,0x36,0x31,0x30,0x38,
				0x35,0x38,0x33,0x33,0x37,0x1b,0x61,0x00,0x1d,0x21,0x01,(byte)0xce,(byte)0xa4,(byte)0xd0,(byte)0xa1,(byte)0xb1,
				(byte)0xa6,0x0a,0x1b,0x40,0x1b,0x61,0x00,0x1d,0x21,0x11,(byte)0xb4,(byte)0xb4,(byte)0xd6,(byte)0xc7,(byte)0xcc,(byte)0xec,
				(byte)0xb5,(byte)0xd8,(byte)0xb9,(byte)0xe3,(byte)0xb3,(byte)0xa1,0x37,(byte)0xba,(byte)0xc5,(byte)0xc2,(byte)0xa5,0x28,0x36,0x30,0x35,(byte)0xca,
				(byte)0xd2,0x29,0x0a,0x1b,0x40,0x1b,0x61,0x00,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,
				0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,
				0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,0x1b,0x40,0x1b,0x61,0x00,0x1d,0x21,0x01,
				(byte)0xcf,(byte)0xc2,(byte)0xb5,(byte)0xa5,(byte)0xa3,(byte)0xba,0x31,0x36,0x3a,0x33,0x35,0x0a,0x1b,0x40,0x1b,0x61,
				0x00,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,
				0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,
				0x2a,0x0a,0x1b,0x40,0x1b,0x61,0x00,(byte)0xb2,(byte)0xcb,(byte)0xc6,(byte)0xb7,0x20,0x20,0x20,0x20,0x20,
				0x20,0x20,0x20,0x20,0x20,0x1b,0x61,0x00,(byte)0xca,(byte)0xfd,(byte)0xc1,(byte)0xbf,0x1b,0x61,0x00,0x20,
				0x20,(byte)0xb5,(byte)0xa5,(byte)0xbc,(byte)0xdb,0x1b,0x61,0x00,0x20,0x20,(byte)0xbd,(byte)0xf0,(byte)0xb6,(byte)0xee,0x0a,0x1b,
				0x40,0x1b,0x61,0x00,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,
				0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,
				0x2d,0x2d,0x2d,0x0a,0x1b,0x40,0x1b,0x61,0x00,(byte)0xbb,(byte)0xc6,(byte)0xec,(byte)0xcb,(byte)0xce,(byte)0xe5,(byte)0xbb,
				(byte)0xa8,(byte)0xc8,(byte)0xe2,(byte)0xb7,(byte)0xb9,(byte)0xa3,(byte)0xa8,(byte)0xb4,(byte)0xf3,(byte)0xa3,(byte)0xa9,0x28,(byte)0xb2,(byte)0xbb,(byte)0xc0,(byte)0xb1,
				0x29,0x0a,0x1b,0x40,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
				0x20,0x20,0x1b,0x61,0x00,0x20,0x31,0x20,0x20,0x1b,0x61,0x00,0x20,0x20,0x20,0x20,
				0x32,0x35,0x1b,0x61,0x00,0x20,0x20,0x20,0x20,0x32,0x35,0x0a,0x1b,0x40,0x1b,0x61,
				0x00,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,
				0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,
				0x0a,0x1b,0x40,0x1b,0x61,0x00,(byte)0xc5,(byte)0xe4,(byte)0xcb,(byte)0xcd,(byte)0xb7,(byte)0xd1,0x20,0x20,0x20,0x20,
				0x20,0x20,0x20,0x20,0x1b,0x61,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
				0x20,0x20,0x20,0x20,0x20,0x20,0x32,0x0a,0x1b,0x40,0x1b,0x61,0x00,0x2d,0x2d,0x2d,
				0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,
				0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,0x1b,0x40,0x1b,
				0x61,0x00,0x1d,0x21,0x01,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
				0x20,0x20,0x20,0x20,0x20,(byte)0xca,(byte)0xb5,(byte)0xb8,(byte)0xb6,(byte)0xbd,(byte)0xf0,(byte)0xb6,(byte)0xee,(byte)0xa3,(byte)0xba,(byte)0xa3,
				(byte)0xa4,0x32,0x37,0x0a,0x1b,0x40,0x0a,0x1b,0x40,0x0a,0x1b,0x40,0x1b,0x61,0x01,0x1d,
				0x21,0x11,(byte)0xbf,(byte)0xda,(byte)0xb1,(byte)0xae,(byte)0xcd,(byte)0xe2,(byte)0xc2,(byte)0xf4,0x0a,0x1b,0x40,0x0a,0x1b,0x40,
				0x1d,0x56,0x42,0x0a,0x0a				
		};
		return rv;
	}
	
/*	
   //getting the cpu model
   private String getCpuHardware() {

		String hardware = "";
		String str = "";
		try {
			Process pp = Runtime.getRuntime().exec("cat /proc/cpuinfo");
			InputStreamReader ir = new InputStreamReader(pp.getInputStream());
			LineNumberReader input = new LineNumberReader(ir);
			while ((str = input.readLine()) != null) {
				if (str.startsWith("Hardware")) {
					int i = str.indexOf(":");
					hardware = str.substring(i + 1).trim().toUpperCase();
					return hardware;
				}
			}

		} catch (IOException ex) {
				ex.printStackTrace();
		}
		return hardware;
	}
*/	

	public  byte[] setCusorPosition(int position) {
		byte[] returnText = new byte[6]; //  current line ,setting absolute print position  ESC $ bL bH
		returnText[0] = 0x1B;
		returnText[1] = 0x24;
		returnText[2] = (byte)position;
		returnText[3] = (byte)(position >> 8);
		returnText[4] = 0x2E;
		returnText[5] = 0x0A;
		return returnText;
	}
	
	public byte[] getElemo2(){
		byte[] rv = new byte[]{
				0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x20,(byte)0xC6,(byte)0xE4,(byte)0xCB,(byte)0xFB,(byte)0xB7,(byte)0xD1,(byte)0xD3,(byte)0xC3,0x20,0x2D
				,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x0A,0x1D,0x21,0x01,(byte)0xB2,(byte)0xE2,(byte)0xCA,(byte)0xD4,(byte)0xCD,(byte)0xF5,(byte)0xC0,(byte)0xCF
				,(byte)0xBC,(byte)0xAA,0x1D,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1D,0x21,0x01,0x20
				,0x78,0x31,0x1D,0x21,0x00,0x1D,0x21,0x01,0x1D,0x21,0x00,0x20,0x20,0x1D,0x21,0x01,0x30,0x2E,0x30,0x30,0x1D,0x21
				,0x00,0x0A,0x1D,0x21,0x01,(byte)0xB2,(byte)0xE2,(byte)0xCA,(byte)0xD4,(byte)0xB2,(byte)0xCD,(byte)0xBA,(byte)0xD0,(byte)0xB7,(byte)0xD1,0x1D,0x21,0x00,0x20,0x20,0x20,0x20
				,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1D,0x21,0x01,0x20,0x78,0x31,0x1D,0x21,0x00,0x1D,0x21,0x01,0x1D
				,0x21,0x00,0x20,0x20,0x1D,0x21,0x01,0x34,0x2E,0x30,0x30,0x1D,0x21,0x00,0x0A,0x1D,0x21,0x01,(byte)0xB2,(byte)0xE2,(byte)0xCA,(byte)0xD4
				,(byte)0xC5,(byte)0xE4,(byte)0xCB,(byte)0xCD,(byte)0xB7,(byte)0xD1,0x1D,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
				,0x1D,0x21,0x01,0x20,0x78,0x31,0x1D,0x21,0x00,0x1D,0x21,0x01,0x1D,0x21,0x00,0x20,0x20,0x1D,0x21,0x01,0x35,0x2E
				,0x30,0x30,0x1D,0x21,0x00,0x0A,0x1D,0x21,0x01,(byte)0xB2,(byte)0xE2,(byte)0xCA,(byte)0xD4,(byte)0xC3,(byte)0xC0,(byte)0xC2,(byte)0xFA,0x31,0x30,(byte)0xBC,(byte)0xF5,0x35
				,(byte)0xBB,(byte)0xEE,(byte)0xB6,(byte)0xAF,0x32,0x1D,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x1D,0x21,0x01,0x20,0x78,0x31,0x1D,0x21,0x00
				,0x1D,0x21,0x01,0x1D,0x21,0x00,0x20,0x1D,0x21,0x01,0x2D,0x35,0x2E,0x30,0x30,0x1D,0x21,0x00,0x0A,0x1D,0x21,0x01
				,(byte)0xCA,(byte)0xB9,(byte)0xD3,(byte)0xC3,(byte)0xBA,(byte)0xEC,(byte)0xB0,(byte)0xFC,0x1D,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
				,0x20,0x20,0x20,0x20,0x1D,0x21,0x01,0x20,0x78,0x31,0x1D,0x21,0x00,0x1D,0x21,0x01,0x1D,0x21,0x00,0x20,0x1D,0x21
				,0x01,0x2D,0x35,0x2E,0x30,0x30,0x1D,0x21,0x00,0x0A,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
				,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x0A,0x1D
				,0x21,0x11,0x35,0x30,0x2E,0x30,(byte)0xD4,(byte)0xAA,0x1D,0x21,0x00,0x00,0x0A,0x0A,0x1D,0x21,0x11,(byte)0xD0,(byte)0xC7,(byte)0xB0,(byte)0xCD,(byte)0xBF
				,(byte)0xCB,(byte)0xBF,(byte)0xA7,(byte)0xB7,(byte)0xC8,(byte)0xB8,(byte)0xBD,(byte)0xBD,(byte)0xFC,0x1D,0x21,0x00,0x00,0x0A,0x1D,0x21,0x11,(byte)0xB2,(byte)0xE2,(byte)0xCA,(byte)0xD4,0x64
				,(byte)0xCD,(byte)0xAC,(byte)0xD1,(byte)0xA7,0x1D,0x21,0x00,0x00,0x0A,0x1D,0x21,0x11,0x31,0x33,0x38,0x2D,0x31,0x32,0x33,0x34,0x2D,0x35
				,0x36,0x37,0x38,0x1D,0x21,0x00,0x00,0x0A,0x1D,0x21,0x11,0x31,0x33,0x38,0x2D,0x31,0x32,0x33,0x34,0x2D,0x35,0x36
				,0x37,0x39,0x1D,0x21,0x00,0x00,0x0A,0x0A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x20,0x1D,0x21,0x11
				,0x23,0x35,0x33,0x1D,0x21,0x00,0x00,(byte)0xCD,(byte)0xEA,0x21,0x20,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x0A
				,0x0A,0x0A,0x0A,0x0A,0x0A				
		};
		return rv;
	}
}
